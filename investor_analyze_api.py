# -*- coding: utf-8 -*-
import os
import logging
from datetime import datetime
from dateutil import parser
from flask import Flask, request, jsonify
from flask_cors import CORS
from email.mime.text import MIMEText
import smtplib
import openai

app = Flask(__name__)
CORS(app)
logging.basicConfig(level=logging.DEBUG)

# Set OpenAI API key
openai.api_key = os.getenv("OPENAI_API_KEY")

SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587
SMTP_USERNAME = "kata.chatbot@gmail.com"
SMTP_PASSWORD = os.getenv("SMTP_PASSWORD")

def format_html_report(insight_title, summary_text, chart_data, tips_text, lang):
    chart_html = "".join([
        f'<div style="margin:10px 0;"><b>{item["label"]}:</b>'
        f'<div style="background:#eee;border-radius:20px;overflow:hidden;height:18px;">'
        f'<div style="height:18px;background:{item["color"]};width:{item["value"]}%;text-align:right;padding-right:6px;color:white;">{item["value"]}%</div>'
        f'</div></div>'
        for item in chart_data
    ])
    tips_html = "".join(f"<li>{tip}</li>" for tip in tips_text)

    return f"""
    <div style="font-family:sans-serif;color:#333;">
      <h2 style="font-size:24px;">{insight_title}</h2>
      <h3>🧠 Strategic Summary:</h3>
      <p>{summary_text}</p>
      <h3>📊 Positioning Strengths:</h3>
      {chart_html}
      <h3>💡 Creative Tips:</h3>
      <ul>{tips_html}</ul>
      <div style="margin-top:30px;padding:15px;background-color:#f0f8ff;border-left:5px solid #0077cc;">
        <strong>The insights in this report are generated by KataChat’s AI systems analyzing:</strong><br>
        1. Proprietary founder/investor positioning data across Singapore, Malaysia, and Taiwan<br>
        2. Anonymized elite business profiles aged 30–70, segmented by gender and industry<br>
        3. OpenAI-derived global trends, investor preferences, and premium client behavior benchmarks<br>
        <em>All outputs respect PDPA and are anonymized. No personal data is stored.</em>
      </div>
    </div>
    """

@app.route("/investor_analyze", methods=["POST"])
def analyze_investor():
    data = request.json
    name = data.get("name")
    gender = data.get("gender")
    dob = parser.parse(data.get("dob"))
    phone = data.get("phone")
    email = data.get("email")
    country = data.get("country")
    industry = data.get("industry")
    other_industry = data.get("other_industry", "")
    experience = data.get("experience")
    challenge = data.get("challenge")
    lang = data.get("lang", "en")

    age = datetime.now().year - dob.year
    final_industry = other_industry if industry == "Other" else industry

    chart_data = [
        {"label": "Brand Recall", "value": 92, "color": "#2b8be0"},
        {"label": "Client Fit Clarity", "value": 88, "color": "#f5a623"},
        {"label": "Trust Signals", "value": 85, "color": "#7ed321"}
    ]

    summary = (
        f"With over {experience} years of experience in {final_industry}, "
        f"this elite {gender.lower()} founder aged {age} based in {country} is actively seeking support in: {challenge}. "
        f"Based on global and regional founders of similar age, gender, and industry, this profile shows strong potential in high-value client attraction and investor confidence."
    )

    tips = [
        "🚀 Elevate your brand image with high-quality content and visuals to attract elite clients/investors.",
        "💰 Showcase your past successes and client testimonials to build trust with potential investors.",
        "📈 Set clear, measurable goals and communicate a strong business strategy for growth.",
        "🌟 Highlight your unique selling points to stand out in a crowded market.",
        "💡 Offer exclusive perks to entice elite investors to choose your business.",
        "🤝 Build relationships with industry influencers and thought leaders.",
        "📊 Provide transparent financial projections to show strong ROI.",
        "🌐 Use SEO, social ads, and email campaigns to reach elite prospects.",
        "🎯 Tailor your messaging to match elite investor preferences.",
        "🏆 Celebrate milestones to inspire confidence and show your track record."
    ]

    html_report = format_html_report("🎯 Investor Positioning Snapshot", summary, chart_data, tips, lang)

    # Send email
    subject = "Your Investor Insight Report"
    message = MIMEText(html_report, "html")
    message["Subject"] = subject
    message["From"] = SMTP_USERNAME
    message["To"] = email

    try:
        smtp = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        smtp.starttls()
        smtp.login(SMTP_USERNAME, SMTP_PASSWORD)
        smtp.sendmail(SMTP_USERNAME, [email], message.as_string())
        smtp.quit()
    except Exception as e:
        logging.error(f"Email failed: {e}")

    return jsonify({
        "title": "🎯 Investor Positioning Snapshot",
        "summary": summary,
        "charts": chart_data,
        "tips": tips
    })

if __name__ == "__main__":
    app.run(debug=True)
